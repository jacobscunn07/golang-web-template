apiVersion: v1
kind: Namespace
metadata:
  name: dotnet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnet2
  labels:
    app: dotnet2
spec:
  selector:
    matchLabels:
      octopusexport: OctopusExport
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: dotnet2
        octopusexport: OctopusExport
    spec:
      containers:
        - name: dotnet2
          image: 'mcr.microsoft.com/dotnet/core/samples:aspnetapp'
          ports:
            - name: http
              containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: dotnet2-svc
  labels:
    name: dotnet2-svc
    app: dotnet2
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app: dotnet2

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dotnet2
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: dotnet2.localhost
      http:
        paths:
          - path: /
            backend:
              serviceName: dotnet2-svc
              servicePort: 80
